@{
    ViewData["Title"] = "Logs";
}

<div id="errorMessages"></div>

<div>
    <label>Enable Filters</label>
    <input type="checkbox" id="filterCheckbox" name="Filter" />
</div>

<div id="filterDiv">
    <div>
        <label>Valve ID</label>
        <input type="number" id="valveId" class="input" />
    </div>
    
    <br />

    <div id="periodDateFilterDiv">
        <label>From</label>
        <input type="datetime-local" id="fromDateFilter" class="input" />
        <label>To</label>
        <input type="datetime-local" id="toDateFilter" class="input" />
    </div>
</div>

<br />

<table id="valveLogsTable">
    <thead>
        <tr>
            <th>
                Valve ID
            </th>
            <th>
                Date
            </th>
            <th>
                Action
            </th>
            <th>
                User
            </th>
        </tr>
    </thead>
</table>

<link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.css" rel="stylesheet" type="text/css" />

@section Scripts
{
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.7.0/moment.min.js"></script>
<script type="text/javascript">
    function fetchData(filter) {
		$.ajax({
			type: "POST",
			url: "/Irrigation/GetValveLogsByFilter",
			data: filter,
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			success: OnSuccess,
			failure: function(response) {
				alert(response.d);
			},
			error: function(response) {
				alert(response.d);
			}
		});
	};

    function OnSuccess(response) {
        if (response.errorMessages) {
            DisplayErrors(response.errorMessages)
        }

        $("#valveLogsTable").DataTable({
            destroy: true,
            bLengthChange: true,
            lengthMenu: [[5, 10, 25, -1], [5, 10, 25, "All"]],
            bFilter: true,
            bSort: true,
            stateSave: true,
            bPaginate: true,
            searching: false,
            order: [
                [1, 'desc']
            ],
            data: response,
            columns: [{
                    data: 'valveId'
                },
                {
                    data: 'timestamp',
                    render: function(data, type, row) {
                        if (type === "sort")
                            return data;
                        return moment.unix(data).format("DD/MM/YYYY, HH:mm:ss");
                    }
                },
                {
                    data: 'action'
                },
                {
                    data: 'user',
                    render: function(data, type, row) {
                        return '<a href="/Users/Details/' + data.id + '" class="aDetails">' + data.fullName + '</a>'
                    }
                }
            ]
        });
    };

    function DisplayErrors(errorMessages) {
	    const div = document.getElementById('errorMessages');
        div.innerHTML = "" ;
        errorMessages.forEach(message => div.innerHTML += '<p>' + message + '</p>');
    }

    function CreateFilter() {
        var filter = new Object();
        if ($("#filterCheckbox").is(":checked") === false) {
            return filter;
        }
        
        filter.valveId = parseInt($("#valveId").val());
        
        fromDate = $("#fromDateFilter").val()
        toDate = $("#toDateFilter").val()
        filter.fromDate = fromDate
        filter.toDate = toDate

        filter.pageSize = 1000
        if (fromDate != "" && toDate != "") {
	        filter.pageSize = -1
        }
        return filter
    };

    $(function() {
		$('#filterDiv').change(function() {
			fetchData(JSON.stringify(CreateFilter()))
		})
	})

    $(document).ready(function() {
        $("#filterDiv").hide();
        
        $('#filterCheckbox').click(function() {
            if ($(this).is(":checked")) {
                $("#filterDiv").show();
            } else {
                $("#filterDiv").hide();
            }
        })

        fetchData(JSON.stringify(CreateFilter()))
		setInterval(() => fetchData(JSON.stringify(CreateFilter())), 5000);
    });
</script>
}