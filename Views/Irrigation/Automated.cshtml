@{
    ViewData["Title"] = "Configure";
}

<h3>Automated Irrigation</h3>

<article class="widget">
  <div class="weatherIcon"><i class="wi wi-day-cloudy"></i></div>
  <div class="weatherInfo">
    <div class="temperature"><span id="temperature"></span></div>
    <div class="description">    
      <div id="condition" class="weatherCondition"></div>
      <div id="rain" class="place"></div>
    </div>
  </div>
  <div id="date" class="date"></div>
</article>

<canvas id="irrigation-time-chart" width="600" height="350"></canvas>

<br />

<div>
    <label>Enable Filters</label>
    <input type="checkbox" id="filterCheckbox" name="Filter" />
</div>

<div id="filterDiv">
	<div>
        <label>One Date Filter</label>
        <input type="checkbox" id="oneDateFilterCheckbox" name="OneDateFilter" checked />
    </div>

    <div id="oneDateFilterDiv">
        <label>In</label>
        <input type="date" id="oneDateFilter"  class="input"/>
    </div>

    <div id="periodDateFilterDiv">
        <label>From</label>
        <input type="date" id="fromDateFilter"  class="input"/>
        <label>To</label>
        <input type="date" id="toDateFilter"  class="input"/>
    </div>
</div>

<br />
<div>
	<table id="tableIrrigation">
		<thead>
			<tr>
				<th>
					Date
				</th>
				<th>
					Irrigation Time
				</th>
				<th>
					RainProbability
				</th>
				<th>
					Completed
				</th>
			</tr>
		</thead>
	</table>
</div>

<link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="~/css/irrigation_automated.css" />

@section Scripts
{
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.7.0/moment.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js"></script>

<script>
    window.percentageChart = {}
	window.percentageChartInit = true
	window.irrigationTimeChartInit = true
    $(document).ready(function () {
        $.ajax({
            type: "POST",
            url: "/Irrigation/WeatherData",
            data: {},
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: displayWeather,
            failure: function(jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                alert(jqXHR.responseText);
            }
        });
    });

	$(function worker() {
		//filter = JSON.stringify(CreateFilter())
		$.ajax({
			type: "POST",
			url: "/Irrigation/GetIrrigationLogsByFilter",
			data: JSON.stringify(new Object()),
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			success: OnSuccess,
			failure: function(response) {
				alert(response.d);
			},
			error: function(response) {
				alert(response.d);
			},
			complete: function() {
				setTimeout(worker, 1000);
			}
		});
	});

function OnSuccess(response) {
		$("#tableIrrigation").DataTable({
			destroy: true,
			bLengthChange: true,
			lengthMenu: [[5, 10, -1], [5, 10, "All"]],
			bFilter: true,
			bSort: true,
			stateSave: true,
			bPaginate: true,
			searching: false,
			order: [
				[1, 'desc']
			],
			data: response,
			columns: [
				{
					data: 'timestamp',
					render: function(data, type, row) {
						if (type === "sort")
							return data;
						return moment.unix(data).format("DD/MM/YYYY, HH:mm:ss");
					}
				},
				{
					data: 'irrigationTime',
					render: function(data, type, row) {
						return data.toFixed(2);;
					}
				},
				{
					data: 'rainProbability',
					render: function(data, type, row) {
						return data + "%";
					}
				},
				{
					data: 'completed'
				}
			]
		});

		FillTimeIntervalsWithEmtpyData(response)

		if (window.irrigationTimeChartInit === true) {
			CreateIrrigationTimeChart(FillTimeIntervalsWithEmtpyData(response))
			window.irrigationTimeChartInit = false
		}

		UpdateIrrigationTimeChartData(window.irrigationTimeChart, FillTimeIntervalsWithEmtpyData(response))
	};

	function FillTimeIntervalsWithEmtpyData(data) {
		var dataParsed = [];
		var lastTime = data[0].timestamp;
		var timeStep = 300;
		for (var i = 0; i < data.length; i++) {
			var curTime = data[i].timestamp;
			if (curTime > lastTime + timeStep) {
				for (var time = lastTime + timeStep; time < curTime; time += timeStep) {
					var emptyData = {
						timestamp: time,
						irrigationTime: 0
					}
					dataParsed.push(emptyData);
				}
			}
			dataParsed.push(data[i]);
			lastTime = curTime;
		}
		return dataParsed
	}

	function CreateIrrigationTimeChart(incomingData) {
		// Draw the chart
		window.irrigationTimeChart = new Chart(document.getElementById("irrigation-time-chart"), {
			type: 'bar',
			data: {
				labels: GetTimestampsAsDates(incomingData.map(a => a.timestamp)),
				datasets: [{
					data: incomingData.map(a => a.irrigationTime),
					label: "Irrigation Time",
					borderColor: "#3cba9f",
					backgroundColor: "#3cba9f",
					borderWidth: 4,
					fill: false,
					tension: 0.5
				}]
			},
			options: {
				title: {
					display: true,
					text: 'Irrigation Time in Minutes'
				},
				animation: {
					animation: false
				},
				plugins: {
					legend: {
						position: 'bottom',
						labels: {
							usePointStyle: true,
							pointStyle: 'circle',
							font: {
								size: 25,
								weight: 'bold'
							}
						}
					}
				},
				elements: {
                    point: {
                        radius: 0
                    }
                },
				scales: {
					x: {
						ticks: {
							autoSkip: true,
							maxTicksLimit: 5.1,
							maxRotation: 0,
							minRotation: 0,
							font: {
								size: 15,
								weight: 'bold'
							}
						},
						grid: {
							display: false
						}
					},
					y: {
						min: 0,
						max: 10,
						ticks: {
							callback: function(value) {
								return value + ' minutes';
							},
							font: {
								size: 15,
								weight: 'bold'
							}
						},
						scaleLabel: {
							display: true
						},
						font: {
							size: 15,
							weight: 5
						}
					}
				}
			}
		});
	}

	function GetTimestampsAsDates(timestamps) {
		let dates = []
		timestamps.forEach((timestamp) => {
			dates.push(moment.unix(timestamp).format("DD/MM/YYYY, HH:mm:ss"))
		})
		return dates
	}

	function UpdateIrrigationTimeChartData(chart, data) {
		// Clear labels
		chart.data.labels = []

		// Update labels with the newest dates
		chart.data.labels = GetTimestampsAsDates(data.map(a => a.timestamp))

		// Clear datasets
		chart.data.datasets.forEach((dataset) => {
			dataset.data = []
		});

		// Update labels with the newest dates
		chart.data.datasets[0].data = data.map(a => a.irrigationTime)

		// Commit
		chart.update();
	}

	function CreateFilter() {
		var filter = new Object();
		if ($("#filterCheckbox").is(":checked") === false) {
			return filter;
		}

		if ($("#oneDateFilterCheckbox").is(":checked")) {
			date = $("#oneDateFilter").val()
			if (date !== "") {
				filter.oneDate = date
			} else {
				filter.oneDate = null;
			}
			filter.fromDate = null
			filter.toDate = null
		} else {
			filter.oneDate = null;
			fromDate = $("#fromDateFilter").val()
			toDate = $("#toDateFilter").val()
			filter.fromDate = fromDate
			filter.toDate = toDate
		}
		return filter
	};

    function displayWeather(response){
        document.querySelector('#temperature').innerHTML = `${response.temperature}°`;
        document.querySelector('#rain').innerHTML = `Precipitation: ${response.rainProbability}%`;
        document.querySelector('#condition').innerHTML = `${response.condition}`;
        document.querySelector('#date').innerHTML = `${response.date}`;
    }
</script>
<script type="text/javascript">
    $(document).ready(function() {
    	$("#filterDiv").hide();
    	$("#oneDateFilterDiv").show();
    	$("#periodDateFilterDiv").hide();
    	$('#filterCheckbox').click(function() {
    		if ($(this).is(":checked")) {
    			$("#filterDiv").show();
    		} else {
    			$("#filterDiv").hide();
    		}
    	})
    	$('#oneDateFilterCheckbox').click(function() {
    		if ($(this).is(":checked")) {
    			$("#oneDateFilterDiv").show();
    			$("#periodDateFilterDiv").hide();
    		} else {
    			$("#oneDateFilterDiv").hide();
    			$("#periodDateFilterDiv").show();
    		}
    	})
    });
</script>
}